apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka-producer
  namespace: kafka-microservices
  labels:
    app: kafka-producer
spec:
  replicas: 2
  selector:
    matchLabels:
      app: kafka-producer
  template:
    metadata:
      labels:
        app: kafka-producer
    spec:
      hostAliases:
      - ip: "192.168.211.134"
        hostnames:
        - "kafka1"
      - ip: "192.168.211.135"
        hostnames:
        - "kafka2"
      - ip: "192.168.211.136"
        hostnames:
        - "kafka3"
      containers:
      - name: kafka-producer
        image: docker.io/cooolryan/kafka-producer:develop
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
        env:
        - name: SPRING_PROFILES_ACTIVE
          value: "k8s"
        - name: JAVA_OPTS
          value: "-Xms1g -Xmx1g -XX:+UseG1GC -XX:MaxGCPauseMillis=200 -XX:G1HeapRegionSize=16m"
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /actuator/health/liveness
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /actuator/health/readiness
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
---
apiVersion: v1
kind: Service
metadata:
  name: kafka-producer-service
  namespace: kafka-microservices
  labels:
    app: kafka-producer
spec:
  selector:
    app: kafka-producer
  ports:
  - port: 8080
    targetPort: 8080
    nodePort: 30081
    protocol: TCP
  type: NodePort
---
apiVersion: v1
kind: Service
metadata:
  name: kafka-producer-lb
  namespace: kafka-microservices
  labels:
    app: kafka-producer
spec:
  selector:
    app: kafka-producer
  ports:
  - port: 80
    targetPort: 8080
    protocol: TCP
  type: LoadBalancer
